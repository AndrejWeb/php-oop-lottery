<?php
/**
 * AAWeb.tech
 * https://aaweb.tech
 */

// Check if the script is running in CLI mode
if (php_sapi_name() !== "cli") {
    exit("This script can only be run from the command line interface (CLI).\n");
}

class Lottery
{
    /**
     * Minimum number to be generated by the lottery
     */
    CONST MIN_NUMBER = 1;

    /**
     * Maximum number to be generated by the lottery
     */
    CONST MAX_NUMBER = 20;

    /**
     * How much credit the user will win if the number is guessed
     */
    CONST CREDIT_WIN = 500;

    /**
     * How much credit the user will lose if the number is not guessed
     */
    CONST CREDIT_LOSE = 50;
    public function __construct(private int $credit = 1000, private int $round = 1)
    {}

    /**
     * Increment the credit with the win amount
     *
     * @return void
     */
    public function incrementCredit(): void {
        $this->credit += self::CREDIT_WIN;
    }

    /**
     * Decrement the credit with the lose amount
     *
     * @return void
     */
    public function decrementCredit(): void {
        $this->credit -= self::CREDIT_LOSE;
    }

    /**
     * Get the current credit
     *
     * @return int
     */
    public function getCredit(): int
    {
        return $this->credit;
    }

    /**
     * Increment lottery round
     *
     * @return void
     */
    public function incrementRound(): void {
        $this->round++;
    }

    /**
     * Get the current lottery round
     *
     * @return int
     */
    public function getRound(): int
    {
        return $this->round;
    }

    /**
     * Get the winning lottery number
     *
     * @return int
     */
    public function getWinningNumber(): int {
        return mt_rand(self::MIN_NUMBER, self::MAX_NUMBER);
    }
}

$lottery = new Lottery();
$min = Lottery::MIN_NUMBER;
$max = Lottery::MAX_NUMBER;
$win = Lottery::CREDIT_WIN;
$lose = Lottery::CREDIT_LOSE;

echo "*****\nTo stop playing the lottery press 'Q' or 'q' at any time.\nYour starting credit is " . $lottery->getCredit() . ".\nFor each guessed number you will win {$win} credits. \nFor each missed number you will lose {$lose} credits.\n*****\n\n";

while (true) {
    $number = readline("Enter a number between {$min} and {$max}: ");

    // quit the script on 'Q' or 'q' key pressed
    if (strtolower($number) === "q") {
        echo "\n*** Thank you for playing the PHP OOP lottery. ***\n";
        break;
    }

    // if the credit is 0 or less it's game over
    if ($lottery->getCredit() <= 0) {
        echo "\nUnfortunately, it's game over. You have no more credit. Please start the script and try again.\n";
        break;
    }

    $number = (int)$number;

    // if it's a valid number within the min and max number range
    if ($number !== 0 && $number >= $min && $number <= $max) {
        echo "----------------------\n";
        echo "Lottery round #".$lottery->getRound() . "\n\n";
        $winningNumber = $lottery->getWinningNumber();
        echo "You entered: ". $number . "\n";
        echo "The winning number is: " . $winningNumber."\n";

        // number guessed - add credit
        if ($number === $winningNumber) {
            echo "*** CONGRATULATIONS *** You won {$win} credits\n\n";
            $lottery->incrementCredit();
            echo "Credit balance: {$lottery->getCredit()}\n";
        } else { // wrong number - subtract credit
            echo "Wrong number. Unfortunately you lost {$lose} credits\n\n";
            $lottery->decrementCredit();
            echo "Credit balance: {$lottery->getCredit()}\n";
        }

        $lottery->incrementRound();
        echo "----------------------\n\n";
    } else {
        echo "The lottery was not run. Please enter a valid number between {$min} and {$max}.\n\n";
    }
}
